#include "freescape/freescape.h"

namespace Freescape {

byte drillerEGA[16][3] = {
	{0x00, 0x00, 0x00},
	{0x00, 0x00, 0x00},
	{0x00, 0xaa, 0xaa},
	{0xaa, 0x00, 0xaa},
	{0xff, 0xff, 0xff},
	{0x55, 0x55, 0x55},
	{0x00, 0x00, 0xaa},
	{0xaa, 0x55, 0x00},
	{0x12, 0xf3, 0x56},
	{0xaa, 0x00, 0x00},
	{0xff, 0x55, 0xff},
	{0x12, 0xf3, 0x56},
	{0x12, 0xf3, 0x56},
	{0x12, 0xf3, 0x56},
	{0x12, 0xf3, 0x56},
	{0x12, 0xf3, 0x56}
};

byte drillerCGA[4][3] = {
	{0x00, 0x00, 0x00},
	{0xff, 0xff, 0xff},
	{0xa8, 0x00, 0xa8},
	{0x00, 0xa8, 0xa8},
};

byte castleCGA[4][3] = {
	{0x83, 0x85, 0x83},
	{0x00, 0x00, 0x00},
	{0x00, 0x85, 0x00},
	{0xff, 0xfb, 0xff},
};

byte castleEGA[16][3] = {
	{0x00, 0x00, 0x00},
	{0x00, 0x00, 0x00},
	{0x00, 0xaa, 0xaa},
	{0x00, 0xaa, 0xaa},
	{0xaa, 0xaa, 0xaa},
	{0x55, 0x55, 0x55},
	{0x00, 0xaa, 0x00},
	{0xaa, 0x55, 0x00},
	{0x12, 0xf3, 0x56},
	{0xaa, 0x00, 0x00},
	{0xff, 0x55, 0xff},
	{0xaa, 0x55, 0x00},
	{0xaa, 0x55, 0x00},
	{0xaa, 0x55, 0x00},
	{0x12, 0xf3, 0x56},
	{0x12, 0xf3, 0x56}
};

byte eclipseEGA[16][3] = {
	{0xfc, 0xfc, 0x54},
	{0x00, 0x00, 0x00},
	{0x54, 0xfc, 0xfc},
	{0x00, 0xaa, 0xaa},
	{0x00, 0xaa, 0x00},
	{0x00, 0x00, 0xA8},
	{0xff, 0x00, 0xaa},
	{0xaa, 0x00, 0xaa},
	{0x12, 0xf3, 0x56},
	{0x55, 0x55, 0xff},
	{0x55, 0xff, 0x55},
	{0xa8, 0x00, 0x00},
	{0xff, 0x55, 0x55},
	{0x54, 0x54, 0x54},
	{0xa8, 0x54, 0x00},
	{0xff, 0xff, 0x55}
};

Graphics::PixelBuffer *FreescapeEngine::getPalette(uint8 areaNumber, uint8 c1, uint8 c2, uint8 c3, uint8 c4, uint16 ncolors) {
	Graphics::PixelFormat pixelFormat = Graphics::PixelFormat(3, 8, 8, 8, 0, 0, 8, 16, 0);
	Graphics::PixelBuffer *palette = nullptr;
	if (isDriller()) {
		if (_renderMode == "ega")
			palette = new Graphics::PixelBuffer(pixelFormat, (byte*)&drillerEGA);
		else if (_renderMode == "cga")
			palette = new Graphics::PixelBuffer(pixelFormat, (byte*)&drillerCGA);
	} else if (isCastle()) {
		if (_renderMode == "ega")
			palette = new Graphics::PixelBuffer(pixelFormat, (byte*)&castleEGA); // TODO
		else if (_renderMode == "cga")
			palette = new Graphics::PixelBuffer(pixelFormat, (byte*)&castleCGA);
	} else if (isEclipse()) {
		palette = new Graphics::PixelBuffer(pixelFormat, (byte*)&eclipseEGA);
	} else
		palette = new Graphics::PixelBuffer(pixelFormat, (byte*)&drillerEGA);

	assert(palette);
	return palette;
}

}